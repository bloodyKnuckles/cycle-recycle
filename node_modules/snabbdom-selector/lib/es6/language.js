import cssauron from 'cssauron2';
import { selectorParser } from './selectorParser';
import { classNameFromVNode } from './classNameFromVNode';
import parentSymbol from './parent-symbol';
export var language = cssauron({
    tag: function (vNode) { return selectorParser(vNode).tagName; },
    class: function (vNode) { return classNameFromVNode(vNode); },
    id: function (vNode) { return selectorParser(vNode).id; },
    children: function (vNode) { return vNode.children || []; },
    parent: function (vNode) { return vNode.data[parentSymbol] || vNode; },
    contents: function (vNode) { return vNode.text; },
    attr: function (vNode, attr) {
        if (vNode.data) {
            var _a = vNode.data, _b = _a.attrs, attrs = _b === void 0 ? {} : _b, _c = _a.props, props = _c === void 0 ? {} : _c;
            if (attrs[attr]) {
                return attrs[attr];
            }
            if (props[attr]) {
                return props[attr];
            }
        }
    },
});
//# sourceMappingURL=language.js.map